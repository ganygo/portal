<tbody id="gridBody<%-locals.id%>">
	<%- builder.control('grid/rows',locals) %>
	
	
</tbody>


<%
function gridRow(row,rowIndex){
	var s=``
	s+=`<tr class="grid${locals.id}-row">`
	s+=`${locals.options.selection && row._id?'<td><input type="checkbox" class="grid-checkbox checkSingle" value="${encodeURIComponent2(JSON.stringify(row))}" name="selected[${index}]"  id="selected[${index}]" title="Seç"></td>':''}`
	Object.keys(locals.fields).forEach((key)=>{
		var field=locals.fields[key]
		if(locals.options.parentField!=''){
			if(rowIndex>-1){
				field.fullField=`${locals.options.parentField}.${rowIndex}.${field.field}`
			}else{
				field.fullField=`${locals.options.parentField}.${field.field}`
			}
		}else{
			field.fullField=field.field
		}
	})
	var row2=clone((row || {}))
	Object.keys(fields).forEach((key,index)=>{
		var field=locals.fields[key]
		if((field.visible==undefined?true:field.visible)){
			if(field.field==undefined)
				field.field=key
			var itemValue=getPropertyByKeyPath(row,field.field) || ''
			var td=''
			switch(field.type.toLowerCase()){
				case 'lookup':
				var lookupText=''
				Object.keys(field.lookup || {}).forEach((key2)=>{
					if(key2===itemValue.toString()){
						lookupText = field.lookup[key2]
						return
					}
				})
				td=`<td class="${field.class || 'ml-1'}">${lookupText}`
				break
				case 'number':
				td=`<td class="${field.class || 'text-right mr-1'}">${itemValue}`
				break
				case 'money':
				td=`<td class="${field.class || 'text-right mr-1'}">${Number(itemValue).formatMoney()}`
				break

				case 'boolean':
				td=`<td class="${field.class || 'text-center'}" style="font-size:20px;">`
				if(field.html==undefined){
					td+=itemValue?'<i class="fi fi-check-mark-square text-primary"></i>':'<i class="fi fi-square-line text-dark"></i>'
				}
				break

				default:
				if(field.html==undefined){
					td=`<td class="${field.class || 'ml-1'}">${itemValue}`
				}
				break
			}




			if(field.html!=undefined){
				var html=field.html
				row2[field.field]=itemValue
				html=replaceUrlCurlyBracket(html,row2)
				s+=`<td class="${field.class || 'ml-1'}">${html}`
			}else{
				s+=td

			}
			if(locals.options.insideForm){
				s+=`<input type="hidden" id="${generateFormId(field.fullField)}" name="${generateFormName(field.fullField)}" value="${itemValue}">`
			}
			s+=`</td>`
		}
	})

	s+=`<td class="text-center">`

	// if(locals.options.insideForm==false){
	// 	Object.keys(locals.options.buttons).forEach((key)=>{
	// 		if(locals.defaultButtons[key]==undefined){
	// 			s+=`${locals.options.buttons[key][0]?replaceUrlCurlyBracket(locals.options.buttons[key][1],row):''}`
	// 		}
	// 	})
	// 	var field0=''
	// 	if(fields['name']!=undefined){
	// 		field0='name'
	// 	}else{
	// 		Object.keys(fields).forEach((key,index)=>{
	// 			if(field0!='')
	// 				return
	// 			if(field.field.indexOf('name')>-1){
	// 				field0=field.field
	// 				return
	// 			}
	// 			if(field.type=='string'){

	// 				field0=field.field
	// 				return
	// 			}
	// 		})
	// 		if(field0==''){
	// 			field0=fields[Object.keys(fields)[0]].field
	// 		}
	// 	}
	// 	var deleteButtonHtml=''
	// 	if(locals.options.buttons.delete[0]){
	// 		deleteButtonHtml=locals.options.buttons.delete[1]
	// 		deleteButtonHtml=deleteButtonHtml.replaceAll('{field[0]}',getPropertyByKeyPath(row,field0))
	// 		deleteButtonHtml=replaceUrlCurlyBracket(deleteButtonHtml,row)
	// 	}

	// 	var copyButtonHtml=''
	// 	if(locals.options.buttons.copy[0]){
	// 		copyButtonHtml=locals.options.buttons.copy[1]
	// 		copyButtonHtml=copyButtonHtml.replaceAll('{field[0]}',getPropertyByKeyPath(row,field0))
	// 		copyButtonHtml=replaceUrlCurlyBracket(copyButtonHtml,row)
	// 	}

	// 	s+=`${copyButtonHtml}
	// 	${locals.options.buttons.print[0]?replaceUrlCurlyBracket(locals.options.buttons.print[1],row):''}
	// 	${locals.options.buttons.view[0]?replaceUrlCurlyBracket(locals.options.buttons.view[1],row):''}
	// 	${locals.options.buttons.edit[0]?replaceUrlCurlyBracket(locals.options.buttons.edit[1],row):''}
	// 	${deleteButtonHtml}`
	// }else{
	// 	s+=`<a href="javascript:refreshGrid${locals.id}(${rowIndex})" class="btn btn-grid-row status-iade" title="Satır düzenle"><i class="fas fa-edit"></i></a>`
	// 	s+=`<a href="javascript:removeGridRow${locals.id}(${rowIndex})" class="btn btn-grid-row btn-danger ml-2" title="Satır sil"><i class="fas fa-trash-alt"></i></a>`
	// }


	s+=`</td>`
	s+=`</tr>`
	return s
}
%>

<%
function updateRow(rowData){
	return ``
}
%>