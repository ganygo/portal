<%layout('../../_common/layout')%>
<link rel="stylesheet" type="text/css" href="https://uicdn.toast.com/tui.time-picker/latest/tui-time-picker.css">
<link rel="stylesheet" type="text/css" href="https://uicdn.toast.com/tui.date-picker/latest/tui-date-picker.css">
<link rel="stylesheet" type="text/css" href="/tui-calendar/dist/tui-calendar.css">
<link rel="stylesheet" type="text/css" href="/tui-calendar/css/default.css">
<link rel="stylesheet" type="text/css" href="/tui-calendar/css/icons.css">

<div class="code-html" style="min-height: 50rem;">
    <div id="menu" class="form-inline">
        
            <select class="form-control" id="gorunum" style="max-width: 100px;">
                <option value="month">Aylık</option>
                <option value="week">Haftalık</option>
                <option value="day">Günlük</option>
            </select>
        <span id="menu-navi">
            <button type="button" class="btn btn-primary ml-4 move-today" data-action="move-today">Bugün</button>
            <button type="button" class="btn btn-info ml-2 move-prev" data-action="move-prev"><i class="fas fa-arrow-left" data-action="move-prev"></i></button>
            <button type="button" class="btn btn-info ml-1 move-next" data-action="move-next"><i class="fas fa-arrow-right" data-action="move-next"></i></button>
        </span>
        <span id="renderRange" class="render-range ml-3"></span>
            
    </div>
    <div id="calendar" class="mt-2"></div>
</div>

<script src="https://uicdn.toast.com/tui.code-snippet/v1.5.2/tui-code-snippet.min.js"></script>
<script src="https://uicdn.toast.com/tui.time-picker/v2.0.3/tui-time-picker.min.js"></script>
<script src="https://uicdn.toast.com/tui.date-picker/v4.0.3/tui-date-picker.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.20.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/chance/1.0.13/chance.min.js"></script>
<script src="/tui-calendar/dist/tui-calendar.js"></script>
<script src="/tui-calendar/data/calendars.js"></script>
<script src="/tui-calendar/data/schedules.js"></script>
<script src="/tui-calendar/default.js"></script>
<script type="text/javascript" class="code-js">
    var list=JSON.parse(decodeURIComponent('<%- encodeURIComponent(JSON.stringify(list)) %>'));
    console.log('list:',list);
    var q=getAllUrlParams();
    var defaultView=q.defaultView || 'month';

    
    var cal = new tui.Calendar('#calendar', {
    defaultView: defaultView,
    week:{startDayOfWeek:1,narrowWeekend:true},
    month:{startDayOfWeek:1,narrowWeekend:true},
    template: schedulerTemplates,
    useCreationPopup: false,
    useDetailPopup: true
    });

    cal.on({
      'clickTimezonesCollapseBtn': function(timezonesCollapsed) {
        if (timezonesCollapsed) {
          cal.setTheme({
            'week.daygridLeft.width': '77px',
            'week.timegridLeft.width': '77px'
          });
        } else {
          cal.setTheme({
            'week.daygridLeft.width': '60px',
            'week.timegridLeft.width': '60px'
          });
        }

        return true;
      }
    });

    $('#gorunum').val(defaultView);

    $('#gorunum').change(function(){
        q.defaultView=$('#gorunum').val();
        var url=window.location.origin + window.location.pathname+'?';
        var index=0;
        for(let k in q){
            if(index>0) url +='&';
            url +=k + '=' + encodeURIComponent(q[k]);
            index++;
        }
        window.location.href=url;
    });

    var ScheduleList=[];

    function yeniItem(obj){
        if(obj.plannedPeriod.startDate=='' || obj.plannedPeriod.endDate=='') return;

        var schedule = new ScheduleInfo();

        var calendar=CalendarList[2];

        schedule.id = obj._id;
        schedule.calendarId = calendar.id;
        schedule.title = obj.item.name.value + ' ' + Number(obj.plannedQuantity).formatQuantity();
        schedule.body = obj.musteri;
        schedule.isReadOnly = false;
        schedule.start=dateTimeFromText(obj.plannedPeriod.startDate + 'T' + obj.plannedPeriod.startTime);
        schedule.end=dateTimeFromText(obj.plannedPeriod.endDate + 'T' + obj.plannedPeriod.endTime);
        // schedule.end.setHours(schedule.end.getHours()+3); 

        schedule.isAllday=false;
        schedule.category = 'time';
        //generateTime(schedule, renderStart, renderEnd);

        schedule.isPrivate = false;
        schedule.location = 'lokasyon';
        schedule.attendees = ['ali','chris','babek'];
        schedule.recurrenceRule = '--recurrenceRule--';
        schedule.state = obj.status;
        schedule.color = calendar.color;
        schedule.bgColor =calendar.bgColor;
        schedule.dragBgColor = calendar.dragBgColor;
        schedule.borderColor = calendar.borderColor;

        // schedule.raw.memo = 'memo bolumuuu';
        // schedule.raw.creator.name = 'creatorname';
        // schedule.raw.creator.avatar = 'avatari';
        // schedule.raw.creator.company = 'creator company';
        // schedule.raw.creator.email = 'creator@email';
        // schedule.raw.creator.phone = '0553 352 10 42';

        ScheduleList.push(schedule);
        
    }

    function loadForm(){
        list.forEach(function(e){
            yeniItem(e);
        })

        // if (chance.bool({ likelihood: 20 })) {
        //     var travelTime = chance.minute();
        //     schedule.goingDuration = travelTime;
        //     schedule.comingDuration = travelTime;
        // }

        renderScheduler(ScheduleList);
      
    }


    loadForm();
</script>

