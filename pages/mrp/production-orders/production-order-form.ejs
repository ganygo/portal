<%
	headerButtons='';
    formName='form1';

    headerButtons +='<button type="button" class="btn btn-primary" title="Kaydet" onclick="formKaydet()"><i class="fas fa-save"></i></button>';
    
    headerButtons +='<a href="javascript:goBack();" class="btn btn-dark ml-2" title="Vazgeç"><i class="fas fa-reply"></i></a>';
%>

<script type="text/javascript">
    var headerButtons=document.getElementById('headerButtons');
    if(headerButtons){
      headerButtons.innerHTML='<%- headerButtons %>';
    }
   
    var db='<%=db%>';
    var sid='<%=sid%>';
    var _id='<%=(form._id || '')%>';
    var q=getAllUrlParams();
    var doc=clone(dbType.productionOrderType);

    doc.issueDate=(new Date()).yyyymmdd();
    doc.issueTime=(new Date()).hhmm();

    <% 
        if(typeof form._id!='undefined'){
        if((form._id || '')!=''){ 
    %>
    doc=JSON.parse(decodeURIComponent('<%- encodeURIComponent(JSON.stringify(form))%>'));
    
    <%  }
    } %>

    
</script>

<form action="" method="POST" role="form" name="form1" id="form1">
    <% if(typeof message!='undefined'){ if(message!=''){ %>
    <div class="row">
        <div class="col-lg-12 col-md-12">
            <div class="alert alert-danger" role="alert">
                <%=message %>
            </div>
        </div>
    </div>
    <% } } %>
    
    <div class="card">
        <div class="card-header p-1">
            <div class="float-left bold text-primary">Genel Bilgiler</div>
            <div class="float-right bold text-primary form-inline">
                <label>XXX:</label>
                
            </div>
            
        </div>
        <div class="card-body p-1">
            <div class="row">
                <div class="form-group col-md-3">
                    <label for="" class="m-0"><%=title%> No</label>
                    <input type="text" class="form-control" name="productionId" id="productionId" placeholder="Boş ise otomatik verilir" autocomplete="off" value="<%=form.productionId%>">
                </div>
                <div class="form-group col-md-2">
                    <label for="" class="m-0">Tarih</label>
                    <div class="input-group date">
                        <input type="text" name="issueDate" id="issueDate" class="form-control" value="" title="Evrak tarihi">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar fa-2x"></i>
                        </div>
                    </div>
                </div>
                <div class="form-group col-md-2">
                    <label for="" class="m-0">Saat</label>
                    <div class="input-group" id="issueTime1">
                        <input type="text" name="issueTime" id="issueTime" class="form-control" value="" title="Evrak saati">
                        <div class="input-group-addon">
                            <i class="fa fa-clock fa-2x"></i>
                        </div>
                    </div>
                </div>
                <div class="form-group col-md-2">
                    <label for="" class="m-0">Türü</label>
                    <select name="productionTypeCode" id="productionTypeCode" class="form-control">
                        <% productionTypeCodeList.forEach(function(e){ %>
                        <option value="<%=e.value%>" <% if(e.value==form.productionTypeCode){%>selected<%} %> ><%=e.text%></option>
                        <% }); %>
                    </select>
                </div>
            </div>
			<div class="row">
            	<div class="form-group col-md-4">
                    <label for="" class="m-0">Uretilecek Mamul</label>
                    <input type="text" class="form-control" id="production-item-name" autocomplete="off" placeholder="" value="" readonly="true">
                    <input type="hidden" class="form-control" id="production-item-id" autocomplete="off" value="">
                </div>
                <div class="form-group col-md-2">
                    <label for="" class="m-0">Reçete</label>
                    <select id="main-recipe" class="form-control">
                    	
                    </select>
                </div>
                <div class="form-group col-md-2">
                    <label for="" class="m-0">Üretilecek Miktar</label>
                    <input type="number" class="form-control" id="plannedQuantity-quantity" autocomplete="off" value="0" readonly="true" onchange="calculatePlannedQuantity()">
                </div>
                <div class="form-group col-md-2">
                    <label for="" class="m-0"><i class="fas fa-user-friends"></i> Gerekli İnsan</label>
                    <select class="form-control" name="staffCount" id="staffCount">
                        <option value="0">-- Sıfır --</option>
                        <option value="0.20">%20</option>
                        <option value="0.25">%25</option>
                        <option value="0.50">%50</option>
                        <option value="1">%100</option>
                        <option value="1.5">%150</option>
                        <option value="2">%200</option>
                        <option disabled="disabled">---</option>
                        <option value="3">3 Kişi</option>
                        <option value="4">4 Kişi</option>
                        <option value="5">5 Kişi</option>
                        <option value="10">10 Kişi</option>
                        <option value="20">20 Kişi</option>
                    </select>
                </div>
                <div class="form-group col-md-2 text-right">
                    <a href="javascript:receteUygula()" class="btn btn-primary mt-md-4"><i class="fas fa-fill-drip" title="Reçeteyi uygula"></i> Uygula</a>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="" class="m-0">Planlama Başlangıç</label>
                        <div class="form-inline">
                            <div class="input-group date" style="width: 120px;">
                                <input type="text" name="plannedPeriod[startDate]" id="plannedPeriod-startDate" class="form-control" value="" title="Planlama başlangıç tarihi">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar fa-2x"></i>
                                </div>
                            </div>
                            <select class="form-control ml-3" name="plannedPeriod[startTimeHour]" id="plannedPeriod-startTimeHour">
                                <% for(var i=0;i<=23;i++){ %>
                                <option value="<%=i.n2()%>"><%=i.n2()%></option>
                                <% } %>
                            </select>
                            <select class="form-control" name="plannedPeriod[startTimeMinute]" id="plannedPeriod-startTimeMinute">
                                <% for(var i=0;i<=3;i++){ %>
                                <option value="<%=(i*15).n2()%>"><%=(i*15).n2()%></option>
                                <% } %>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="" class="m-0">Bitiş</label>
                        <div class="form-inline">
                            <div class="input-group date" style="width: 120px;">
                                <input type="text" name="plannedPeriod[endDate]" id="plannedPeriod-endDate" class="form-control" value="" title="Planlama başlangıç tarihi">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar fa-2x"></i>
                                </div>
                            </div>
                            <select class="form-control ml-3" name="plannedPeriod[endTimeHour]" id="plannedPeriod-endTimeHour">
                                <% for(var i=0;i<=23;i++){ %>
                                <option value="<%=i.n2()%>"><%=i.n2()%></option>
                                <% } %>
                            </select>
                            <select class="form-control" name="plannedPeriod[endTimeMinute]" id="plannedPeriod-endTimeMinute">
                                <% for(var i=0;i<=3;i++){ %>
                                <option value="<%=(i*15).n2()%>"><%=(i*15).n2()%></option>
                                <% } %>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="forCustomerPanel" class="card mt-2">
        <div class="card-header p-1">
            <div class="float-left bold text-primary">Sipariş(ler)</div>
            <div class="float-right bold text-primary">
                <a href="javascript:modalSalesOrders()" class="btn btn-primary btn-sm"><i class="fas fa-plus-square"></i> Sipariş</a>
            </div>
        </div>
        <div class="card-body p-1" style="overflow: auto;">
            <table id="gridOrderLineReference" class="table form-table table-bordered table-striped m-0"  cellspacing="0">
                <thead>
                    <tr class="text-nowrap">
                        <th width="100" class="">Sip No</th>
                        <th width="100" class="">Tarih</th>
                        <th width="" class="">Müşteri</th>
                        <th width="" class="">Mamül</th>
                        <th width="100" class="text-right">Sip.Miktar</th>
                        <th width="100" class="text-right">Sevkedilen</th>
                        <th width="100" class="text-right">Ürt.Miktar</th>
                        <th width="50" class="text-center">#</th>
                    </tr>
                </thead>
                <tbody id="gridOrderLineReferenceTBody">
                    
                </tbody>
            </table>

        </div>
    </div>
            
    <%- partial('../../_common/recipe.ejs',{recipeFormType:'production-orders'}) %>

     <div class="card mt-2">
        <div class="card-header p-1">Palet/Ambalaj/Kutu/Koli</div>
        <div class="card-body p-1">
            <div class="row m-0 p-0">
                <div class="col-md-3 p-0 m-0 form-group">
                    <select class="form-control" id="choosePackingOption" name="choosePackingOption" onchange="choosePackingOptionChanged()"></select>
                </div>
                <div class="w-100"></div>
                <div class="col-md-3 p-0 m-0 form-group">
                    <label class="m-0">Palet</label>
                    <input type="text" class="form-control" name="palletType" id="palletType" value="" readonly="true" />
                </div>
                <div class="col-md-3 p-0 m-0 form-group">
                    <label class="m-0">Ambalaj</label>
                    <input type="text" class="form-control" name="packingType" id="packingType" value="" readonly="true" />
                </div>
                <div class="col-md-2 p-0 m-0 form-group">
                    <label class="m-0">Koli içi miktar</label>
                    <input type="number" class="form-control" name="quantityInPacking" id="quantityInPacking" value="0"  onchange="paketPaletHesapla()" />
                </div>
                <div class="col-md-2 p-0 m-0 form-group">
                    <label class="m-0">Palet İstif Sıra</label>
                    <input type="number" class="form-control" name="palletRowCount" id="palletRowCount" value="0" onchange="paketPaletHesapla()" />
                </div>
                <div class="col-md-2 p-0 m-0 form-group">
                    <label class="m-0">Sıradaki Koli sayısı</label>
                    <input type="number" class="form-control" name="packingCountInRow" id="packingCountInRow" value="0" onchange="paketPaletHesapla()" />
                </div>
                <div class="col-md-3 p-0 m-0 form-group">
                    <label class="m-0">Ambalaj 2</label>
                    <input type="text" class="form-control" name="packingType2" id="packingType2" value="" readonly="true" />
                </div>
                <div class="col-md-3 p-0 m-0 form-group">
                    <label class="m-0">Ambalaj 3</label>
                    <input type="text" class="form-control" name="packingType3" id="packingType3" value="" readonly="true" />
                </div>
                <div class="col-md-2 p-0 m-0 form-group">
                    <label class="m-0 bold">Toplam Palet</label>
                    <input type="number" class="form-control bold" name="totalPallet" id="totalPallet" value="0" readonly="true" />
                </div>
                <div class="col-md-2 p-0 m-0 form-group">
                    <label class="m-0 bold">Toplam Koli/kutu</label>
                    <input type="number" class="form-control bold" name="totalPacking" id="totalPacking" value="0" readonly="true" />
                </div>
            </div>
            <div class="row m-0 p-0">
                <div class="col-md-12">
                    <div id="aciklama1"></div>
                </div>
            </div>
        </div>
    </div>
</form>
<div class="modal" id="salesOrdersModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="salesOrdersModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-scrollable modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header p-2 ">
                <label class="modal-title" id="salesOrdersModalLabel">Üretilecek Sipariş(ler)i seç</label>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body p-2" style="overflow: auto;">
                
                <table id="gridSalesOrders" class="table form-table table-bordered table-striped m-0"  cellspacing="0">
	                <thead>
	                    <tr class="text-nowrap">
	                        <th width="30" class=""><input type="checkbox" class="mt-1" value="true" name="selectAll" id="selectAll"></th>
	                        <th width="100" class="">Sip No</th>
	                        <th width="100" class="">Tarih</th>
	                        <th width="" class="">Müşteri</th>
	                        <th width="" class="">Mamül</th>
	                        <th width="100" class="text-right">Miktar</th>
	                        
	                    </tr>
	                </thead>
	                <tbody id="gridSalesOrdersLineGrid">
	                    
	                </tbody>
	            </table>
                
            </div>
            
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Vazgeç</button>
                <a id="salesOrdersModalSaveButton" class="btn btn-primary" href="javascript:okSalesOrders()">Tamam</a>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

	function modalSalesOrders(){
		$("#gridSalesOrdersLineGrid tr").remove();
    	
    	var q=getAllUrlParams();
    	$.ajax({
            url:'/dbapi/production-orders/salesOrders?db=' + q.db + '&sid=' + q.sid,
            type:'GET',
            dataType: 'json',
            success: function(result) {
                if(result.success){
                	var lineGrid=document.getElementById('gridSalesOrdersLineGrid');
					result.data.docs.forEach((sip,index)=>{
				        var newRow=lineGrid.insertRow(lineGrid.rows.length);
				        // newRow.classList.add('text-nowrap');
				        newRow.insertCell(0).innerHTML='<input type="checkbox" class="sipRow" id="sipRow[' + index + ']" name="sipRow[' + index + ']" value="' + encodeURIComponent(JSON.stringify(sip)) + '">';
				        newRow.insertCell(1).innerHTML=sip.ID.value;
				        newRow.insertCell(2).innerHTML=sip.issueDate.value;
				        newRow.insertCell(3).innerHTML=sip.buyerCustomerParty.party.partyName.name.value;
				        newRow.insertCell(4).innerHTML=sip.orderLine.item.name.value;
				        var cell5=newRow.insertCell(5);
				        cell5.classList.add('text-right');
				        cell5.innerHTML=Number(sip.producedRemaining).formatDecimal();
				        
				    });
                    $('#salesOrdersModal').modal('show');
                }
            },
            error:function(err){
                console.log('err:',err);
            }
        });
	}

	function okSalesOrders(){
		var list=[];
		var bFarkliUrunVar=false;

		$(".sipRow").each(function() {
			if(this.checked){
				var sip=JSON.parse(decodeURIComponent(this.value));
				
				//farkli urun kontrolu item._id uzerinden yapilacak
				list.forEach(function(e){
					//if(e.orderLine.item._id)
					if(e.orderLine.item._id!=sip.orderLine.item._id){
						bFarkliUrunVar=true;
						return;
					}
				})
				if(bFarkliUrunVar) return;
				list.push(sip);
				
				
			}
		});
		if(bFarkliUrunVar) return alert('Uretim emrine ayni urunden olan siparisleri ekleyebilirsiniz.');
		if(list.length==0)  return alert('Kayit secilmemis!');
		// if(!confirm(list.length + ' adet siparis icin uretim emri verilecektir. Onayliyor musunuz?')) return;

		list.forEach(function(e){
			var obj={
                lineId:e.orderLine.ID,
                item:e.orderLine.item,
                orderedQuantity:e.orderLine.orderedQuantity,

                // producedQuantity:e.orderLine.producedQuantity,
                producedQuantity:{value:e.producedRemaining, attr:{unitCode:e.orderLine.orderedQuantity.attr.unitCode}},
                deliveredQuantity:e.orderLine.deliveredQuantity,

                orderReference:{
                    order:e.sip_id,
                    ID:e.ID,
                    issueDate:e.issueDate,
                    orderTypeCode:e.orderTypeCode,
                    salesOrderId:e.salesOrderId,
                    buyerCustomerParty:{
                        party:e.buyerCustomerParty.party,
                        deliveryContact:e.buyerCustomerParty.deliveryContact,
                        accountingContact:e.buyerCustomerParty.accountingContact,
                        buyerContact:e.buyerCustomerParty.buyerContact
                    }
                }
            }
            var bFound=false;
            doc.orderLineReference.forEach(function(e2){
            	if(e.ID.value==e2.orderReference.ID.value && e.orderLine.ID.value==e2.lineId.value){
            		bFound=true;
            		return;
            	}
            })
            var bAyniUrun=true;
            doc.orderLineReference.forEach(function(e2){
            	// urun karsilastirimlasi item._id alanindan yapilacak qwerty
            	if(e.orderLine.item._id!=e2.item._id){
            		bAyniUrun=false;
            		return;
            	}
            })
            if(bFound==false && bAyniUrun==true) {
            	doc.orderLineReference.push(obj);
            	if(doc.orderLineReference.length==1){
            		doc.item=doc.orderLineReference[0].item._id;
            		loadMainItemAndRecipe();
            	}
            }
		})
		
		loadOrderLineReference();
		calculatePlannedQuantity();
		$('#salesOrdersModal').modal('hide');
		
	}

	

	function loadOrderLineReference(){
		$("#gridOrderLineReferenceTBody tr").remove();
		var lineGrid=document.getElementById('gridOrderLineReferenceTBody');
		doc.orderLineReference.forEach((sip,index)=>{
	        var newRow=lineGrid.insertRow(lineGrid.rows.length);
	        // newRow.classList.add('text-nowrap');
	        newRow.insertCell(0).innerHTML=sip.orderReference.ID.value + '.' + sip.lineId.value;
	        newRow.insertCell(1).innerHTML=sip.orderReference.issueDate.value;
	        newRow.insertCell(2).innerHTML=sip.orderReference.buyerCustomerParty.party.partyName.name.value;
	        newRow.insertCell(3).innerHTML=sip.item.name.value;
	        var cell4=newRow.insertCell(4);
	        cell4.classList.add('text-right');
	        cell4.innerHTML=Number(sip.orderedQuantity.value).formatDecimal();

	        var cell5=newRow.insertCell(5);
	        cell5.classList.add('text-right');
	        cell5.innerHTML=Number(sip.deliveredQuantity.value).formatDecimal();

	        var cell6=newRow.insertCell(6);
	        cell6.classList.add('text-right');
	        cell6.innerHTML='<input type="number" name="order_producedQuantity[' + index + ']" class="form-control" value="' + sip.producedQuantity.value + '" onchange="calculatePlannedQuantity()" >';

	        var cell7=newRow.insertCell(7);
	        cell7.classList.add('text-center');
	        cell7.innerHTML='<a href="javascript:removeOrderLineReference(' + index + ');" class="btn btn-danger btn-sm fas fa-trash-alt ml-1" title="Sil"></a>';
	        
	    });

	    if(doc.orderLineReference.length>0){
	    	
	    	doc.item=doc.orderLineReference[0].item._id;
	    }
	}

	function removeOrderLineReference(index){
		if(!confirm('Satir:' + (index+1).toString() + '  cikarilacaktir. Onayliyor musunuz?')) return;
		doc.orderLineReference.splice(index,1);
		loadOrderLineReference();
		calculatePlannedQuantity();
	}

    var sourceRecipeDoc;
    var itemDoc;

	function loadMainItemAndRecipe(callback){
		$('#production-item-name').val('');
		$('#main-recipe option').remove();

		if((doc.item || '')=='') return;
		$.ajax({
	        url:'/dbapi/items/' + doc.item + '?&db=' + q.db + '&sid=' + q.sid,
	        type:'GET',
	        dataType: 'json',
	        success: function(result) {
	                if(result.success){
                        itemDoc=result.data;
                        load_packingTypes();
	                    $('#production-item-name').val(result.data.name.value);
	                    $.ajax({
					        url:'/dbapi/recipes?item=' + doc.item + '&db=' + q.db + '&sid=' + q.sid,
					        type:'GET',
					        dataType: 'json',
					        success: function(result) {
					                if(result.success){
					                    if(result.data.docs){
					                    	var receteler = document.getElementById("main-recipe");
					                    	result.data.docs.forEach(function(e){
					                    		var c = document.createElement("option");
												c.text = e.name;
												if(e.revision>1) c.text +=' [rev:' + e.revision + ']';
												c.value=e._id;
												if((doc.sourceRecipe || '')!=''){
  				                    				if(doc.sourceRecipe==e._id){
  				                    					c.selected=true;
  				                    					doc.recipeName=e.name;
	                    								doc.recipeRevision=e.revision;
                                                        sourceRecipeDoc=clone(e);
  				                    				}
  				                    			}
												receteler.options.add(c, receteler.options.length);
  				                    		});

					                    	if(callback!=undefined) callback(null)
					                    }
					                }
					            },
					        error:function(err){
					        	if(callback!=undefined) callback('hata:(loadMainItemAndRecipe)');
					            console.error('err recipes:',err);
					        }
					    });
	                }
	            },
	        error:function(err){
	            console.error('err items:',err);
	        }
	    });
	}

  
    function load_packingTypes(){
        if(itemDoc==undefined) return;

        $('#choosePackingOption option').remove();

        var packingOptions = document.getElementById("choosePackingOption");
        if(itemDoc.packingOptions){
            itemDoc.packingOptions.forEach(function(e){
                var c = document.createElement("option");
                c.text='';
                if(e.palletType){
                    c.text += e.palletType.name + ' - ';
                }
                if(e.packingType){
                    c.text += e.packingType.name + ' - ';
                }
                if(e.packingType2){
                    c.text += e.packingType2.name + ' - ';
                }
                if(e.packingType3){
                    c.text += e.packingType3.name;
                }

                c.value=encodeURIComponent(JSON.stringify(e)); 
                if(doc.packingOption){
                    var palletType=e.palletType?e.palletType._id.toString():'';
                    var packingType=e.packingType?e.packingType._id.toString():'';
                    var packingType2=e.packingType2?e.packingType2._id.toString():'';
                    var packingType3=e.packingType3?e.packingType3._id.toString():'';

                    var doc_palletType=doc.packingOption.palletType?doc.packingOption.palletType._id.toString():'';
                    var doc_packingType=doc.packingOption.packingType?doc.packingOption.packingType._id.toString():'';
                    var doc_packingType2=doc.packingOption.packingType2?doc.packingOption.packingType2._id.toString():'';
                    var doc_packingType3=doc.packingOption.packingType3?doc.packingOption.packingType3._id.toString():'';

                    if(palletType==doc_palletType && packingType==doc_packingType && packingType2==doc_packingType2 && packingType3==doc_packingType3){
                        c.selected=true;
                    }
                }
                
                packingOptions.options.add(c, packingOptions.options.length);
            });
        }
        choosePackingOptionChanged();
        
    }

    function choosePackingOptionChanged(){
        if($('#choosePackingOption').val()=='') return;
        var obj=JSON.parse(decodeURIComponent($('#choosePackingOption').val()));

        
        if(obj.palletType) 
            $('#palletType').val(obj.palletType.name);
        else
            $('#palletType').val('');

        if(obj.packingType) 
            $('#packingType').val(obj.packingType.name);
        else
            $('#packingType').val('');

        if(obj.packingType2) 
            $('#packingType2').val(obj.packingType2.name);
        else
            $('#packingType2').val('');

        if(obj.packingType3) 
            $('#packingType3').val(obj.packingType3.name);
        else
            $('#packingType3').val('');


        $('#quantityInPacking').val((obj.quantityInPacking || 0));
        $('#palletRowCount').val((obj.palletRowCount || 0));
        $('#packingCountInRow').val((obj.packingCountInRow || 0));

    }

    function paketPaletHesapla(){
        var quantityInPacking=Number($('#quantityInPacking').val());
        var palletRowCount=Number($('#palletRowCount').val());
        var packingCountInRow=Number($('#packingCountInRow').val());
        var plannedQuantity=Number($('#plannedQuantity-quantity').val());

        var totalPacking=0;
        var totalPallet=0;

        if(quantityInPacking>0) totalPacking=Math.ceil(plannedQuantity/quantityInPacking);

        if(packingCountInRow*palletRowCount>0) totalPallet=Math.ceil(totalPacking/(packingCountInRow*palletRowCount));

        $('#totalPacking').val(totalPacking);
        $('#totalPallet').val(totalPallet);
    }

   


	var calculating=false;

	function calculatePlannedQuantity(){
		if(calculating) return;
		calculating=true;
		switch(doc.productionTypeCode){
			case 'DEPO':
			doc.plannedQuantity=Number($('#plannedQuantity-quantity').val());
			//$('#plannedQuantity-quantity').val(doc.plannedQuantity)
			break;
			case 'MUSTERI':
			doc.plannedQuantity=0;
			doc.orderLineReference.forEach(function(e,index){
				doc.plannedQuantity+=Number($('input[name="order_producedQuantity[' + index +']"]').val());
			})
			$('#plannedQuantity-quantity').val(doc.plannedQuantity);
			break;
		}
		calculating=false;
	}

    

    function loadForm(){
		$('#issueDate').val(doc.issueDate);
		$('#issueTime').val(doc.issueTime);
        $('#plannedPeriod-startDate').val(doc.plannedPeriod.startDate);
        $('#plannedPeriod-startTimeHour').val(doc.plannedPeriod.startTime.substr(0,2));
        $('#plannedPeriod-startTimeMinute').val(doc.plannedPeriod.startTime.substr(3,2));

        $('#plannedPeriod-endDate').val(doc.plannedPeriod.endDate);
        $('#plannedPeriod-endTimeHour').val(doc.plannedPeriod.endTime.substr(0,2));
        $('#plannedPeriod-endTimeMinute').val(doc.plannedPeriod.endTime.substr(3,2));

        $('#issueTime').val(doc.issueTime);
		if(doc.productionTypeCode!='') $('#productionTypeCode').val(doc.productionTypeCode);
		$('#plannedQuantity-quantity').val(doc.plannedQuantity);
        

        switch(doc.productionTypeCode){
            case 'DEPO':
                $('#production-item-name').removeAttr('readonly');
                $('#plannedQuantity-quantity').removeAttr('readonly');
                $('#forCustomerPanel').hide();
                
            break;
            case 'MUSTERI':
                $('#production-item-name').prop('readonly',true);
                $('#plannedQuantity-quantity').prop('readonly',true);
                $('#forCustomerPanel').show();
                
            break;
        }
		loadMainItemAndRecipe(function(err){
			if(!err){
                if(doc.productionTypeCode=='MUSTERI') loadOrderLineReference();

				reloadRecipe();

                // $('#palletType').val((doc.palletType || ''));
                // $('#packingType').val((doc.packingType || ''));
                $('#totalPallet').val((doc.totalPallet || 0));
                $('#totalPacking').val((doc.totalPacking || 0));
                if(doc.packingOption){
                    $('#quantityInPacking').val(doc.packingOption.quantityInPacking);
                    $('#palletRowCount').val(doc.packingOption.palletRowCount);
                    $('#packingCountInRow').val(doc.packingOption.packingCountInRow);
                }
                //paketPaletHesapla();
			}
		});
		


	}
	
	loadForm();

	


	function receteUygula(){
		doc.sourceRecipe=$('#main-recipe').val() || '';
		
		if((doc.item || '')=='') return alert('Urun secilmemis.');
		if((doc.sourceRecipe || '')=='') return alert('Recete secilmemis.');
		if(doc.plannedQuantity<=0) return alert('Planlanan miktar sifir dan buyuk olmalidir.');
		$.ajax({
	        url:'/dbapi/recipes/' + doc.sourceRecipe + '?db=' + q.db + '&sid=' + q.sid,
	        type:'GET',
	        dataType: 'json',
	        success: function(result) {
	                if(result.success){
	                    var recete=result.data;

	                    var oran=0;
	                    if(recete.totalQuantity>0) oran=doc.plannedQuantity/recete.totalQuantity;
	                    if(oran==0) return alert('Recete orani "0" olamaz. Recete miktarlarini kontrol ediniz.');
	                    doc.recipeName=recete.name;
	                    doc.recipeRevision=recete.revision;
	                    doc.description=recete.description;
                        doc.staffCount=recete.staffCount || 0;
	                    doc.process=[];
	                    doc.materialSummary=[];
	                    doc.outputSummary=[];
	                    doc.qualityControl=[];
	                    recete.process.forEach(function(e){
	                    	var obj=JSON.parse(JSON.stringify(e));
	                    	obj.input.forEach(function(e2){
	                    		e2.quantity=e2.quantity*oran;
	                    	})
	                    	obj.output.forEach(function(e2){
	                    		e2.quantity=e2.quantity*oran;
	                    	})
                            obj.machines=[];
	                    	doc.process.push(obj);
	                    });

	                    recete.materialSummary.forEach(function(e){
	                    	var obj=JSON.parse(JSON.stringify(e));
	                    	obj.quantity=obj.quantity * oran;
	                    	doc.materialSummary.push(obj);
	                    });

        				recete.outputSummary.forEach(function(e){
	                    	var obj=JSON.parse(JSON.stringify(e));
	                    	obj.quantity=obj.quantity * oran;
                            
	                    	doc.outputSummary.push(obj);
	                    })
        				
        				doc.qualityControl=JSON.parse(JSON.stringify(recete.qualityControl));
                        doc.totalWeight=(recete.totalWeight || 0) * oran;
                        sourceRecipeDoc=clone(recete);
        				reloadRecipe();
                        paketPaletHesapla();
	                }
	            },
	        error:function(err){
	            console.error('err recipes:',err);
	        }
	    });
	}


	function formKaydet(){
		if((doc.item|| '')=='') return alert('Ürün seçilmemiş');
		if((doc.sourceRecipe|| '')=='') return alert('Ürün recetesi seçilmemiş');
		if(($('#issueDate').val() || '')=='') return alert('Üretim tarihi giriniz.');

		doc.productionId=$('#productionId').val();
		doc.issueDate=$('#issueDate').val();
		doc.issueTime=$('#issueTime').val();
        doc.plannedPeriod.startDate=$('#plannedPeriod-startDate').val();
        if($('#plannedPeriod-startDate').val()==''){
            doc.plannedPeriod.startTime='';
        }else{
            doc.plannedPeriod.startTime=$('#plannedPeriod-startTimeHour').val() + ':' + $('#plannedPeriod-startTimeMinute').val();
        }

        doc.plannedPeriod.endDate=$('#plannedPeriod-endDate').val();
        if($('#plannedPeriod-endDate').val()==''){
            doc.plannedPeriod.endTime='';
        }else{
            doc.plannedPeriod.endTime=$('#plannedPeriod-endTimeHour').val() + ':' + $('#plannedPeriod-endTimeMinute').val();
        }


        if(doc.productionTypeCode=='DEPO'){
            doc.orderLineReference.splice(0);
        }

        if($('#choosePackingOption').val()!=''){
            doc.packingOption=JSON.parse(decodeURIComponent($('#choosePackingOption').val()));
            doc.packingOption.quantityInPacking=Number($('#quantityInPacking').val());
            doc.packingOption.palletRowCount=Number($('#palletRowCount').val());
            doc.packingOption.packingCountInRow=Number($('#packingCountInRow').val());
        }
        
        

        doc.totalPallet=Number($('#totalPallet').val());
        doc.totalPacking=Number($('#totalPacking').val());


		saveRecipe((err)=>{
	        if(!err){
	            goBack();
	        }else{
	            alert(err.message);
	        }
	    });
	}

    $(document).ready(function(){

        $('select[name="productionTypeCode"]').change(function(){
        	doc.productionTypeCode=$('#productionTypeCode').val();

            switch($('select[name="productionTypeCode"]').val()){
	        	case 'DEPO':
	        		$('#production-item-name').removeAttr('readonly');
	        		$('#plannedQuantity-quantity').removeAttr('readonly');
	        		$('#forCustomerPanel').hide();
	                doc.item=$("#production-item-id").val();
	        	break;
	        	case 'MUSTERI':
	        		$('#production-item-name').prop('readonly',true);
	        		$('#plannedQuantity-quantity').prop('readonly',true);
	        		$('#forCustomerPanel').show();
	        		loadOrderLineReference();
	        	break;
	        }

	        loadMainItemAndRecipe();
	        calculatePlannedQuantity();
        });

        $('.input-group.date').datepicker({
            format: 'yyyy-mm-dd',
            language: "tr",
            orientation: "bottom auto",
            // todayBtn: "linked",
            autoclose: true,
            todayHighlight: true,
            clearBtn: true

            // startDate: -4,
            // endDate: +8,
        });
       

        

	    $('#production-item-name').autocomplete({
	        source:function(request,response){
	            $.ajax({
	                url:'/dbapi/items?itemType=product&name=' +  encodeURIComponent(request.term) + '&db=' + q.db + '&sid=' + q.sid,
	                type:'GET',
	                dataType: 'json',
	                success: function(result) {
	                        if(result.success){
	                            var dizi=[];
	                            for(var i=0;i<result.data.docs.length;i++){
	                                var item=result.data.docs[i];
	                                
	                                dizi.push({name:item.name.value, label:(getItemTypeName(item.itemType) + ' - ' + item.name.value),value:item._id});
	                            }
	                            if(dizi.length>0){
	                            	$('#cbNewItemPanel').hide();
	                            }else{
	                            	$('#cbNewItemPanel').show();
	                            }
	                            response(dizi);
	                        }
	                    },
	                error:function(err){
	                    console.error('err:',err);
	                }
	            });
	        },
	        select: function (event, ui) {
	                $("#production-item-name").val(ui.item.name); 
	                $("#production-item-id").val(ui.item.value);
	                doc.item=ui.item.value;
	                
	                loadMainItemAndRecipe();
	                return false;
	            }
	    });
    });
</script>