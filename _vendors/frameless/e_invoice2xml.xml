<?xml version="1.0" encoding="UTF-8"?>
<Invoice xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:qdt="urn:oasis:names:specification:ubl:schema:xsd:QualifiedDatatypes-2" xmlns:cctc="urn:un:unece:uncefact:documentation:2" xmlns:ubltr="urn:oasis:names:specification:ubl:schema:xsd:TurkishCustomizationExtensionComponents" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" xsi:schemaLocation="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2 UBL-Invoice-2.1.xsd" xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2">
    <cbc:UBLVersionID>2.1</cbc:UBLVersionID>
    <cbc:CustomizationID>TR1.2</cbc:CustomizationID>
    <cbc:ProfileID>EARSIVFATURA</cbc:ProfileID>
    <cbc:ID>ARS2019000004892</cbc:ID>
    <cbc:UUID>7e9aac91-d011-417e-b5be-44398a9bcd78</cbc:UUID>
    <cbc:IssueDate>2019-12-19</cbc:IssueDate>
    <cbc:IssueTime>09:39:25.7211219+03:00</cbc:IssueTime>
    <cbc:InvoiceTypeCode>ISTISNA</cbc:InvoiceTypeCode>
    <cbc:DocumentCurrencyCode>TRY</cbc:DocumentCurrencyCode>
    <cbc:TaxCurrencyCode>TRY</cbc:TaxCurrencyCode>
    <cbc:PricingCurrencyCode>TRY</cbc:PricingCurrencyCode>
    <cbc:PaymentCurrencyCode>TRY</cbc:PaymentCurrencyCode>
    <cbc:PaymentAlternativeCurrencyCode>TRY</cbc:PaymentAlternativeCurrencyCode>
    <cbc:LineCountNumeric>2</cbc:LineCountNumeric>
    <cac:AccountingSupplierParty>
        <cac:Party>
            <cbc:WebsiteURI/>
            <cac:PartyName>
                <cbc:Name>ALPAY BİLGİSAYAR</cbc:Name>
            </cac:PartyName>
            <cac:PostalAddress>
                <cbc:Room/>
                <cbc:StreetName/>
                <cbc:BlockName/>
                <cbc:BuildingName/>
                <cbc:BuildingNumber/>
                <cbc:CitySubdivisionName>FETHİYE</cbc:CitySubdivisionName>
                <cbc:CityName>MUĞLA</cbc:CityName>
                <cbc:PostalZone/>
                <cbc:Postbox/>
                <cbc:Region/>
                <cbc:District/>
                <cac:Country>
                    <cbc:IdentificationCode>TR</cbc:IdentificationCode>
                    <cbc:Name>Türkiye</cbc:Name>
                </cac:Country>
            </cac:PostalAddress>
            <cac:PartyTaxScheme>
                <cac:TaxScheme>
                    <cbc:Name>FETHİYE</cbc:Name>
                    <cbc:TaxTypeCode/>
                </cac:TaxScheme>
            </cac:PartyTaxScheme>
            <cac:Contact>
                <cbc:Telephone/>
                <cbc:Telefax/>
                <cbc:ElectronicMail/>
            </cac:Contact>
            <cac:Person>
                <cbc:FirstName/>
                <cbc:MiddleName/>
                <cbc:FamilyName/>
                <cbc:NameSuffix/>
                <cbc:Title/>
            </cac:Person>
            <cac:PartyIdentification>
                <cbc:ID schemeID="VKN">9000068418</cbc:ID>
            </cac:PartyIdentification>
            <cac:PartyIdentification>
                <cbc:ID schemeID="MERSISNO">12345669-111</cbc:ID>
            </cac:PartyIdentification>
            <cac:PartyIdentification>
                <cbc:ID schemeID="TICARETSICILNO">12345669-111</cbc:ID>
            </cac:PartyIdentification>
        </cac:Party>
    </cac:AccountingSupplierParty>
    <cac:AccountingCustomerParty>
        <cac:Party>
            <cbc:WebsiteURI/>
            <cac:PartyName>
                <cbc:Name>CENGİZ KASAL</cbc:Name>
            </cac:PartyName>
            <cac:PostalAddress>
                <cbc:Room>0</cbc:Room>
                <cbc:StreetName>İZMİR BUCA</cbc:StreetName>
                <cbc:BlockName/>
                <cbc:BuildingName/>
                <cbc:BuildingNumber>0</cbc:BuildingNumber>
                <cbc:CitySubdivisionName>FETHİYE</cbc:CitySubdivisionName>
                <cbc:CityName>MUĞLA</cbc:CityName>
                <cbc:PostalZone/>
                <cbc:Postbox/>
                <cbc:Region/>
                <cbc:District/>
                <cac:Country>
                    <cbc:IdentificationCode>TR</cbc:IdentificationCode>
                    <cbc:Name>Türkiye</cbc:Name>
                </cac:Country>
            </cac:PostalAddress>
            <cac:PartyTaxScheme>
                <cac:TaxScheme>
                    <cbc:Name/>
                    <cbc:TaxTypeCode/>
                </cac:TaxScheme>
            </cac:PartyTaxScheme>
            <cac:Contact>
                <cbc:Telephone/>
                <cbc:Telefax/>
                <cbc:ElectronicMail/>
            </cac:Contact>
            <cac:Person>
                <cbc:FirstName/>
                <cbc:MiddleName/>
                <cbc:FamilyName/>
                <cbc:NameSuffix/>
                <cbc:Title/>
            </cac:Person>
            <cac:PartyIdentification>
                <cbc:ID schemeID="VKN">5325246559</cbc:ID>
            </cac:PartyIdentification>
        </cac:Party>
    </cac:AccountingCustomerParty>
    <cac:PricingExchangeRate>
        <cbc:SourceCurrencyCode>TRY</cbc:SourceCurrencyCode>
        <cbc:TargetCurrencyCode>TRY</cbc:TargetCurrencyCode>
        <cbc:CalculationRate>0</cbc:CalculationRate>
        <cbc:Date/>
    </cac:PricingExchangeRate>
    <cac:LegalMonetaryTotal>
        <cbc:LineExtensionAmount>500</cbc:LineExtensionAmount>
        <cbc:TaxExclusiveAmount>500</cbc:TaxExclusiveAmount>
        <cbc:TaxInclusiveAmount>505</cbc:TaxInclusiveAmount>
        <cbc:AllowanceTotalAmount>0</cbc:AllowanceTotalAmount>
        <cbc:ChargeTotalAmount>0</cbc:ChargeTotalAmount>
        <cbc:PayableRoundingAmount>0</cbc:PayableRoundingAmount>
        <cbc:PayableAmount>505</cbc:PayableAmount>
    </cac:LegalMonetaryTotal>
    <cac:InvoiceStatus>Approved</cac:InvoiceStatus>
    <cac:LocalStatus/>
    <cac:Note>48 F 555</cac:Note>
    <cac:Note>48 F 555</cac:Note>
    <cac:AdditionalDocumentReference>
        <cbc:ID>d100a857-e106-414c-8dc1-66b971a27c84</cbc:ID>
        <cbc:IssueDate>2019-12-19</cbc:IssueDate>
        <cbc:DocumentTypeCode/>
        <cbc:DocumentType>Xslt</cbc:DocumentType>
        <cac:Attachment>
            <cbc:EmbeddedDocumentBinaryObject mimeCode="application/xml" encodingCode="Base64" characterSetCode="UTF-8" filename="ARS2019000004892.xslt"></cbc:EmbeddedDocumentBinaryObject>
        </cac:Attachment>
    </cac:AdditionalDocumentReference>
    <cac:TaxTotal>
        <cbc:TaxAmount>0</cbc:TaxAmount>
        <cac:TaxSubtotal>
            <cbc:TaxableAmount>0</cbc:TaxableAmount>
            <cbc:TaxAmount>5</cbc:TaxAmount>
            <cac:TaxCategory>
                <cbc:Name/>
                <cac:TaxScheme>
                    <cbc:ID/>
                    <cbc:Name>Rusum</cbc:Name>
                    <cbc:TaxTypeCode/>
                </cac:TaxScheme>
                <cbc:TaxExemptionReason>106 Diğer İstisnalar</cbc:TaxExemptionReason>
                <cbc:TaxExemptionReasonCode>106</cbc:TaxExemptionReasonCode>
            </cac:TaxCategory>
        </cac:TaxSubtotal>
    </cac:TaxTotal>
    <cac:InvoiceLine>
        <cbc:ID>1</cbc:ID>
        <cbc:InvoicedQuantity unitCode="KGM">500</cbc:InvoicedQuantity>
        <cbc:LineExtensionAmount currencyID="TRY">500</cbc:LineExtensionAmount>
        <cac:Item>
            <cbc:BrandName/>
            <cac:BuyersItemIdentification>
                <cbc:ID>aa</cbc:ID>
            </cac:BuyersItemIdentification>
            <cbc:Description/>
            <cbc:Keyword/>
            <cac:ManufacturersItemIdentification>
                <cbc:ID>uu</cbc:ID>
            </cac:ManufacturersItemIdentification>
            <cbc:ModelName/>
            <cbc:Name>SALATALIK</cbc:Name>
            <cac:SellersItemIdentification>
                <cbc:ID>ss</cbc:ID>
            </cac:SellersItemIdentification>
        </cac:Item>
        <cac:Price>
            <cbc:PriceAmount currencyID="TRY">1</cbc:PriceAmount>
        </cac:Price>
        <cac:TaxTotal>
            <cbc:TaxAmount>0</cbc:TaxAmount>
            <cac:TaxSubtotal>
                <cbc:TaxableAmount>0</cbc:TaxableAmount>
                <cbc:TaxAmount>0</cbc:TaxAmount>
                <cac:TaxCategory>
                    <cbc:Name/>
                    <cac:TaxScheme>
                        <cbc:ID/>
                        <cbc:Name>KDV</cbc:Name>
                        <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
                    </cac:TaxScheme>
                    <cbc:TaxExemptionReason>12345 sayılı kanuna istinaden</cbc:TaxExemptionReason>
                    <cbc:TaxExemptionReasonCode/>
                </cac:TaxCategory>
            </cac:TaxSubtotal>
        </cac:TaxTotal>
        <cac:Note/>
        <cac:AllowanceCharge>
            <cbc:SequenceNumeric>0</cbc:SequenceNumeric>
            <cbc:AllowanceChargeReason/>
            <cbc:Amount>0</cbc:Amount>
            <cbc:BaseAmount>0</cbc:BaseAmount>
            <cbc:ChargeIndicator>false</cbc:ChargeIndicator>
            <cbc:MultiplierFactorNumeric>0</cbc:MultiplierFactorNumeric>
            <cbc:PerUnitAmount>0</cbc:PerUnitAmount>
        </cac:AllowanceCharge>
        <cac:Delivery>
            <cbc:ActualDeliveryDate/>
            <cbc:ActualDeliveryTime/>
            <cac:AlternativeDeliveryLocation>
                <cbc:ID/>
            </cac:AlternativeDeliveryLocation>
            <cac:Despatch>
                <cbc:ID/>
                <cbc:ActualDespatchDate/>
                <cbc:ActualDespatchTime/>
                <cac:EstimatedDespatchPeriod>
                    <cbc:Description/>
                </cac:EstimatedDespatchPeriod>
                <cbc:Instructions/>
            </cac:Despatch>
            <cbc:ID/>
            <cbc:Quantity>0</cbc:Quantity>
            <cbc:TrackingID/>
            <cac:Shipment>
                <cbc:ID>1</cbc:ID>
                <cbc:DeclaredCustomsValueAmount>0</cbc:DeclaredCustomsValueAmount>
                <cbc:DeclaredForCarriageValueAmount>0</cbc:DeclaredForCarriageValueAmount>
                <cbc:DeclaredStatisticsValueAmount>0</cbc:DeclaredStatisticsValueAmount>
                <cac:FirstArrivalPortLocation>
                    <cbc:ID/>
                </cac:FirstArrivalPortLocation>
                <cbc:FreeOnBoardValueAmount>0</cbc:FreeOnBoardValueAmount>
                <cbc:GrossVolumeMeasure>0</cbc:GrossVolumeMeasure>
                <cbc:GrossWeightMeasure>0</cbc:GrossWeightMeasure>
                <cbc:HandlingCode/>
                <cbc:HandlingInstructions/>
                <cbc:InsuranceValueAmount>0</cbc:InsuranceValueAmount>
                <cac:LastExitPortLocation>
                    <cbc:ID/>
                </cac:LastExitPortLocation>
                <cbc:NetVolumeMeasure>0</cbc:NetVolumeMeasure>
                <cbc:NetWeightMeasure>0</cbc:NetWeightMeasure>
                <cbc:TotalGoodsItemQuantity>0</cbc:TotalGoodsItemQuantity>
                <cbc:TotalTransportHandlingUnitQuantity>0</cbc:TotalTransportHandlingUnitQuantity>
                <cac:GoodsItem>
                    <cbc:DeclaredCustomsValueAmount currencyID="USD">15</cbc:DeclaredCustomsValueAmount>
                    <cbc:FreeOnBoardValueAmount currencyID="USD">12</cbc:FreeOnBoardValueAmount>
                    <cbc:RequiredCustomsID>123556.AA</cbc:RequiredCustomsID>
                </cac:GoodsItem>
                <cac:ShipmentStage>
                    <cbc:TransportModeCode>1</cbc:TransportModeCode>
                </cac:ShipmentStage>
                <cac:TransportHandlingUnit>
                    <cac:ActualPackage>
                        <cbc:ID>KapNo12345</cbc:ID>
                        <cbc:Quantity unitCode="CK">3</cbc:Quantity>
                        <cbc:PackagingTypeCode>CK</cbc:PackagingTypeCode>
                        <cac:ContainedPackage/>
                    </cac:ActualPackage>
                </cac:TransportHandlingUnit>
            </cac:Shipment>
            <cac:DeliveryTerms>
                <cbc:Amount>0</cbc:Amount>
                <cbc:ID>CIF</cbc:ID>
                <cbc:SpecialTerms/>
            </cac:DeliveryTerms>
            <cac:DeliveryAddress>
                <cbc:StreetName>Oberlandstraße 40-41</cbc:StreetName>
                <cbc:BuildingName>C1</cbc:BuildingName>
                <cbc:BuildingNumber>155</cbc:BuildingNumber>
                <cbc:CitySubdivisionName>Oberland</cbc:CitySubdivisionName>
                <cbc:CityName>Berlin</cbc:CityName>
                <cac:Country>
                    <cbc:Name>GERMANY</cbc:Name>
                </cac:Country>
            </cac:DeliveryAddress>
        </cac:Delivery>
    </cac:InvoiceLine>
</Invoice>